name: Benchmark build and run

# Builds the branch benchmark code against Spack-installed dependencies
# for CPU and GPU versions. Runs the CPU version of the branch
# benchmark.

on:
  # Uncomment the below 'push' to trigger on push
  push:
    branches:
      - "**"
  pull_request:
    branches: [ "main" ]
  merge_group:
    branches:
      - main
  # schedule:
  #   # '*' is a special character in YAML, so string must be quoted
  #   - cron: "0 2 * * THU"
  workflow_dispatch:

env:
  GITHUB_USER: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SPACK_BUILDCACHE: oci://ghcr.io/ukri-bench/spack-buildcache-qe

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      packages: write

    #env:
    #  dolfinx_ref: main
    #  # bench_dolfinx_ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
    strategy:
      matrix:
        backend:
          [
            { device: cpu, spack_opt: "%gcc ^openblas ^fftw"},
            # { device: rocm, spack_opt: "++rocm" },
            # { device: cuda, spack_opt: "++cuda" },
          ]

    steps:
      - uses: actions/checkout@v5

      - if: ${{ matrix.backend.device != 'cpu' }}
        name: Install GPU compiler/driver
        uses: ukri-bench/spack-configs/actions/install-gpu-driver@main
        with:
          runtime: ${{ matrix.backend.device }}

      - name: Set up Spack
        uses: spack/setup-spack@v2
        with:
          ref: develop     # Spack version (examples: develop, releases/v0.23)
          color: true      # Force color output (SPACK_COLOR=always)
          path: spack-src  # Where to clone Spack

      - if: ${{ matrix.backend.device != 'rocm' }}
        name: Get Spack config
        run: |
          wget -O spack.yml https://raw.githubusercontent.com/ukri-bench/spack-configs/refs/heads/main/configs/gh-actions/spack.yml
      - if: ${{ matrix.backend.device == 'rocm' }}
        name: Get Spack config
        run: |
          wget -O spack.yml https://raw.githubusercontent.com/ukri-bench/spack-configs/refs/heads/main/configs/gh-actions/spack-rocm.yml

      - name: Add ukri-bench Spack repository and create environment
        shell: spack-bash {0}
        run: |
          spack repo add --name bench_pkgs https://github.com/ukri-bench/spack-packages.git ./bench_pkgs
          spack mirror add --unsigned --type binary --oci-username-variable GITHUB_USER --oci-password-variable GITHUB_TOKEN local-buildcache $SPACK_BUILDCACHE
          spack env create . spack.yml

      - if: ${{ matrix.backend.device == 'rocm' }}
        name: Find compilers (ROCm)
        shell: spack-bash {0}
        run: |
          spack -e . compiler find
          spack -e . config get packages
      - if: ${{ matrix.backend.device == 'cuda' }}
        name: Find compilers (CUDA)
        shell: spack-bash {0}
        run: |
          spack -e . external find -p /usr/local/cuda --all --not-buildable
          spack -e . config get packages

      #- name: Point Spack to benchmark code
      #  shell: spack-bash {0}
      #  run: spack -e . develop --path . --no-clone bench-dolfinx@main

      - name: Build benchmark
        shell: spack-bash {0}
        run: |
          spack -e . add quantum-espresso ${{ matrix.backend.spack_opt }}
          spack -e . install -U -j 4 --use-buildcache auto

#      - if: ${{ matrix.backend.device == 'cpu' }}
#        name: Run benchmark (CPU)
#        shell: spack-bash {0}
#        run: |
#          spack env activate .
#          bench_dolfinx --ndofs=1000 --degree=3 --qmode=0 --nreps=1 --mat_comp --float=64 --json a.json
#          mpirun -n 2 bench_dolfinx --ndofs=500 --degree=3 --qmode=0 --nreps=1 --mat_comp --float=64 --json b.json
#
#      - if: ${{ matrix.backend.device == 'cpu' }}
#        name: Post-process
#        shell: spack-bash {0}
#        run: |
#          spack env activate .
#          spack load py-numpy
#          python src/test_output.py a.json
#          python src/test_output.py b.json
#
      - name: Push packages and update index
        shell: spack-bash {0}
        run: |
          spack -e . buildcache push --only dependencies --with-build-dependencies \
            --base-image ubuntu:24.04 --update-index local-buildcache
        if: ${{ !cancelled() }}
